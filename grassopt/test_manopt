import manopt.solvers.trustregions.*;
import manopt.manifolds.grassmann.*;
import manopt.tools.*;
     
% Generate the problem data.
T = 100;
p = 1:T + 0.05 * randn(1, T);
r = 2;
s = struct('m', r+1, 'n', T-r);




     
% Create the problem structure.
manifold = grassmannfactory(s.m, s.m-r,1);
problem.M = manifold;
     
% Define the problem cost function and its gradient.
problem.cost = @(x) -x'*(A*x);
problem.grad = @(x) manifold.proj(x, -2*A*x);
     
% Numerically check gradient consistency.
checkgradient(problem);
     
% Solve.
[x xcost info] = trustregions(problem);
     
% Display some statistics.
figure;
semilogy([info.iter], [info.gradnorm], '.-');
